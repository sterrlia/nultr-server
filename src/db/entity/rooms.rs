//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.12

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "rooms")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::messages::Entity")]
    Messages,
    #[sea_orm(has_many = "super::rooms_users::Entity")]
    RoomsUsers,
}

impl Related<super::messages::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Messages.def()
    }
}

impl Related<super::rooms_users::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::RoomsUsers.def()
    }
}

impl Related<super::users::Entity> for Entity {
    fn to() -> RelationDef {
        super::rooms_users::Relation::Users.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::rooms_users::Relation::Rooms.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
